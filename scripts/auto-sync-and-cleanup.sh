#!/bin/bash

# Auto sync and cleanup script for CloudFlare AI Daily
# This script:
# 1. Syncs daily/ to content/daily/ with Hugo front matter
# 2. Optionally removes old files from daily/ after successful sync
# 3. Can be run locally or in GitHub Actions

set -e

DAILY_DIR="daily"
HUGO_CONTENT_DIR="content/daily"
CLEANUP_AFTER_DAYS=30  # Keep files for 30 days in daily/ folder

echo "🔄 Starting auto sync and cleanup process..."

# Create directories if they don't exist
mkdir -p "$DAILY_DIR"
mkdir -p "$HUGO_CONTENT_DIR"

# Function to add Hugo front matter
add_hugo_frontmatter() {
    local file="$1"
    local date="$2"
    
    # Extract title from first heading or use default
    local title=$(grep -m 1 "^#" "$file" | sed 's/^#\s*//' || echo "AI 洞察日报 - $date")
    
    # Create temporary file with front matter
    cat > "$HUGO_CONTENT_DIR/${date}.md.tmp" <<EOF
---
title: "$title"
date: ${date}T09:00:00+08:00
description: "AI 洞察日报 - $(date -d "$date" "+%Y年%m月%d日" 2>/dev/null || echo "$date")"
categories:
  - 日报
tags:
  - AI
  - 人工智能
  - 行业动态
draft: false
---

EOF
    
    # Append original content
    cat "$file" >> "$HUGO_CONTENT_DIR/${date}.md.tmp"
    
    # Move to final location
    mv "$HUGO_CONTENT_DIR/${date}.md.tmp" "$HUGO_CONTENT_DIR/${date}.md"
}

# Sync all markdown files from daily/ to content/daily/
echo "📁 Syncing files from $DAILY_DIR to $HUGO_CONTENT_DIR..."
sync_count=0

for file in "$DAILY_DIR"/*.md; do
    [ -e "$file" ] || continue
    
    basename=$(basename "$file")
    [ "$basename" = "SUMMARY.md" ] && continue
    
    # Extract date from filename
    if [[ $basename =~ ^([0-9]{4}-[0-9]{2}-[0-9]{2})\.md$ ]]; then
        date="${BASH_REMATCH[1]}"
        
        # Check if target file already exists and is newer
        if [ -f "$HUGO_CONTENT_DIR/$basename" ]; then
            if [ "$HUGO_CONTENT_DIR/$basename" -nt "$file" ]; then
                echo "⏭️  Skipping $basename - Hugo version is newer"
                continue
            fi
        fi
        
        # Check if file already has front matter
        if head -n 1 "$file" | grep -q "^---$"; then
            echo "📋 Copying $basename (already has front matter)"
            cp "$file" "$HUGO_CONTENT_DIR/$basename"
        else
            echo "✏️  Adding front matter to $basename"
            add_hugo_frontmatter "$file" "$date"
        fi
        
        ((sync_count++))
    fi
done

echo "✅ Synced $sync_count files"

# Optional: Cleanup old files from daily/ directory
if [ "${CLEANUP_OLD_FILES:-false}" = "true" ]; then
    echo "🧹 Cleaning up files older than $CLEANUP_AFTER_DAYS days..."
    cleanup_count=0
    
    for file in "$DAILY_DIR"/*.md; do
        [ -e "$file" ] || continue
        
        basename=$(basename "$file")
        [ "$basename" = "SUMMARY.md" ] && continue
        
        # Check if file exists in Hugo content and is older than threshold
        if [ -f "$HUGO_CONTENT_DIR/$basename" ]; then
            if [ $(find "$file" -mtime +$CLEANUP_AFTER_DAYS -print 2>/dev/null | wc -l) -gt 0 ]; then
                echo "🗑️  Removing old file: $basename"
                rm "$file"
                ((cleanup_count++))
            fi
        fi
    done
    
    echo "🧹 Cleaned up $cleanup_count old files"
fi

# Git operations (only if in a git repository)
if git rev-parse --git-dir > /dev/null 2>&1; then
    if [ "${AUTO_COMMIT:-false}" = "true" ]; then
        echo "📝 Committing changes..."
        git add "$HUGO_CONTENT_DIR"/*.md
        
        if git diff --cached --quiet; then
            echo "ℹ️  No changes to commit"
        else
            git commit -m "chore: sync daily content to Hugo format

- Synced $sync_count files from daily/ to content/daily/
- Added Hugo front matter where needed
- Auto-generated by sync script"
            echo "✅ Changes committed"
        fi
    fi
fi

echo "🎉 Auto sync complete!"